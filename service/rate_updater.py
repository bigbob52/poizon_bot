import asyncio
from loader import bot
from service.exchange_rate import exchange_rate_cache
import logging
from datetime import datetime, timedelta, timezone

from config import NEWS_CHANEL_ID, RATE_MESSAGE_ID, RATES_CACHE_TTL, RATE_MESSAGE_TEMPLATE

logger = logging.getLogger(__name__)

async def update_currency_message():
    last_rate = None
    while True:
        rate = await exchange_rate_cache.fetch_exchange_rate()
        new_rate_str = f"{rate:.3f}"

        if new_rate_str != last_rate:
            new_text = RATE_MESSAGE_TEMPLATE.format(rate=new_rate_str, update_ts=exchange_rate_cache.last_update)
            try:
                await bot.edit_message_text(new_text, chat_id=NEWS_CHANEL_ID, message_id=RATE_MESSAGE_ID, parse_mode="HTML")
            except Exception as e:
                logger.warning(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è {e}")
            last_rate = new_rate_str
            logger.info(f"–ö—É—Ä—Å –æ–±–Ω–æ–≤–ª–µ–Ω (rate={new_rate_str})")
        else:
            logger.debug("–ö—É—Ä—Å –±–∞–Ω–∫–∞ –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è")

        await asyncio.sleep(RATES_CACHE_TTL)



        # text = (
        #     f"üí± –ê–∫—Ç—É–∞–ª—å–Ω—ã–π –∫—É—Ä—Å —é–∞–Ω—è:\n"
        #     f"üá®üá≥‚Üíüáßüáæ 1 CNY = {rate:.3f} BYN\n\n"
        #     f"(–¥–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è —Ä–∞–∑ –≤ —Å—É—Ç–∫–∏)"
        # )

        # try:
        #     await bot.edit_message_text(text, chat_id=NEWS_CHANEL_ID, message_id=RATE_MESSAGE_ID, parse_mode="HTML")
        #     logger.info(f"–ö—É—Ä—Å –æ–±–Ω–æ–≤–ª–µ–Ω: {rate:.3f}")
        # except Exception as e:
        #     if "message is not modified" in str(e):
        #         logger.info(f"–ö—É—Ä—Å –Ω–µ –±—ã–ª –æ–±–Ω–æ–≤–ª–µ–Ω, —Ç.–∫. —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –ø—Ä–µ–¥—ã–¥—É—â–∏–º (rate={rate})")
        #     else:
        #         logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –∫—É—Ä—Å{e}", exc_info=True)
        # await asyncio.sleep(RATES_CACHE_TTL)